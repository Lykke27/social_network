{"version":3,"sources":["components/Header/Header.module.css","components/Users/Users.module.css","components/Dialogs/Dialogs.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/FriendsBlock/FriendsBlock.module.css","components/Profile/MyPosts/MyPosts.module.css","components/News/News.module.css","components/Music/Music.module.css","components/Settings/Settings.module.css","components/Friends/Friends.module.css","components/common/Preloader/Preloader.module.css","components/Profile/MyPosts/Post/Post.module.css","components/FriendsBlock/FriendsBlock.tsx","components/News/News.tsx","components/Music/Music.tsx","components/Settings/Settings.tsx","components/Friends/Friends.tsx","redux/dialogs-reducer.ts","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx","api/api.ts","redux/users-reducer.ts","assets/images/user.png","components/Users/Users.tsx","assets/images/giphy.gif","components/common/Preloader/Preloader.tsx","components/Users/UsersContainer.tsx","redux/profile-reducer.ts","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","components/Header/Header.tsx","redux/auth-reducer.ts","components/Header/HeaderContainer.tsx","App.tsx","redux/header-reducer.ts","redux/friends-reducer.ts","redux/redux-store.ts","index.tsx"],"names":["module","exports","FriendsBlock","className","s","friendsBlock","friend","src","alt","News","style","newsPage","Music","musicPage","Settings","settingsPage","Friends","friendsPage","UPDATE_NEW_MESSAGE_BODY","SEND_MESSAGE","initialState","messagesData","id","message","dialogsData","name","avatar","newMessageBody","dialogsReducer","state","action","type","body","DialogItem","props","dialog","active","to","Message","Dialogs","dialogsPage","dialogsElements","map","d","messagesElements","m","dialogs","dialogItems","messages","value","onChange","e","target","updateNewMessageBody","placeholder","onClick","sendMessage","DialogsContainer","connect","instance","axios","create","baseURL","withCredentials","headers","usersAPI","currentPage","pageSize","get","then","response","data","userId","post","delete","authAPI","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","totalUsers","isFetching","followingInProgress","setIsFetching","setFollowingInProgress","userID","usersReducer","user","followed","filter","Users","pagesCount","Math","ceil","pages","i","push","styles","pageNavigation","slice","page","selectedPage","pageNumber","onPageChanging","userInfo","avaAndButtonBlock","userAvatar","photos","small","userPhoto","disabled","some","unfollow","follow","userContent","userNameAndStatus","userName","userStatus","status","random","Preloader","preloader","UsersContainer","setCurrentPage","getUsers","this","React","Component","usersPage","dispatch","resultCode","items","totalCount","ADD_POST","UPDATE_NEW_POST_TEXT","SET_USER_PROFILE","posts","likeCount","newPostText","profile","profileReducer","newPost","newText","ProfileInfo","backgroundImage","avaAndDescriptionBlock","large","description","fullName","lookingForAJobDescription","contacts","github","vk","aboutMeBlock","aboutMe","Post","item","MyPosts","postsElements","p","newPostElement","createRef","postsBlock","current","text","updateNewPostText","ref","addPost","MyPostsContainer","profilePage","Profile","mapDispatchToProps","getUserProfile","connector","useParams","useEffect","Header","sidebar","sidebarLinks","navItem","isAuth","login","SET_USER_DATA","email","authReducer","HeaderContainer","getAuthUserData","auth","App","path","element","sidebarFriends","headerReducer","friendsData","friendsReducer","rootReducer","combineReducers","header","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.738113b2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"Header_sidebar__jCkZT\",\"sidebarLinks\":\"Header_sidebarLinks__2dWi_\",\"navItem\":\"Header_navItem__27x_d\",\"login\":\"Header_login__1SL3g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"Users_users__1EAew\",\"userInfo\":\"Users_userInfo__Xp_-B\",\"avaAndButtonBlock\":\"Users_avaAndButtonBlock__2NVEl\",\"userAvatar\":\"Users_userAvatar__1s_Bq\",\"userContent\":\"Users_userContent__3o-Ls\",\"userName\":\"Users_userName__LD7Qz\",\"pageNavigation\":\"Users_pageNavigation__3ZboS\",\"pageNumber\":\"Users_pageNumber__2y-PG\",\"selectedPage\":\"Users_selectedPage__2SHE8\",\"preloaderIMG\":\"Users_preloaderIMG__2RU0z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3xqOx\",\"dialogItems\":\"Dialogs_dialogItems__2Dh5f\",\"active\":\"Dialogs_active__ebGHO\",\"dialog\":\"Dialogs_dialog__28bn_\",\"messages\":\"Dialogs_messages__1E4if\",\"message\":\"Dialogs_message__A1NxY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backgroundImage\":\"ProfileInfo_backgroundImage__3u917\",\"avatar\":\"ProfileInfo_avatar__34q3u\",\"description\":\"ProfileInfo_description__1G86a\",\"avaAndDescriptionBlock\":\"ProfileInfo_avaAndDescriptionBlock__2RO4l\",\"aboutMeBlock\":\"ProfileInfo_aboutMeBlock__XzozI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendsBlock\":\"FriendsBlock_friendsBlock__19cBo\",\"friend\":\"FriendsBlock_friend__--SjE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__zeknq\",\"posts\":\"MyPosts_posts__1Dj_D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newsPage\":\"News_newsPage__2CVsn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"musicPage\":\"Music_musicPage__18e6c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settingsPage\":\"Settings_settingsPage__F3-lB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendsPage\":\"Friends_friendsPage__21IUc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__1IsK2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__QpGno\"};","import React from \"react\";\r\nimport s from './FriendsBlock.module.css';\r\n\r\nconst FriendsBlock = () => {\r\n    return(\r\n        <div className={s.friendsBlock}>\r\n            <div className={s.friend}>\r\n                <img src=\"https://img.icons8.com/bubbles/2x/user-male.png\" alt=\"\"/>\r\n                Friend Online 1\r\n            </div>\r\n            <div className={s.friend}>\r\n                <img src=\"https://img.icons8.com/bubbles/452/freddie-mercury.png\" alt=\"\"/>\r\n                Friend Online 2\r\n            </div>\r\n            <div className={s.friend}>\r\n                <img src=\"https://i.pinimg.com/originals/dd/fc/b8/ddfcb8662d5146d1ac824b1ea81ff5e2.png\" alt=\"\"/>Friend Online 3\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default FriendsBlock;","import React from \"react\";\r\nimport style from './News.module.css'\r\n\r\nconst News = () => {\r\n    return (\r\n        <div className={style.newsPage}>\r\n            News page\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News;\r\n","import React from \"react\";\r\nimport style from './Music.module.css'\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div className={style.musicPage}>\r\n            Music files\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music;","import React from \"react\";\r\nimport style from './Settings.module.css'\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div className={style.settingsPage}>\r\n            Settings are here\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings;","import React from \"react\";\r\nimport style from \"./Friends.module.css\"\r\nimport {FriendsPageType} from \"../../redux/friends-reducer\";\r\n\r\nconst Friends: React.FC<FriendsPageType> = () => {\r\n    return (\r\n        <div className={style.friendsPage}>\r\n            Friends Page\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Friends;","import {ActionsTypes} from \"./redux-store\";\r\n\r\nconst UPDATE_NEW_MESSAGE_BODY = \"UPDATE_NEW_MESSAGE_BODY\"\r\nconst SEND_MESSAGE = \"SEND_MESSAGE\"\r\n\r\nexport type MessagesDataType = {\r\n    id: number\r\n    message: string\r\n}\r\nexport type DialogsDataType = {\r\n    id: number\r\n    name: string\r\n    avatar: string\r\n}\r\nexport type DialogsPageType = {\r\n    messagesData: Array<MessagesDataType>\r\n    dialogsData: Array<DialogsDataType>\r\n    newMessageBody: string\r\n}\r\n\r\nlet initialState = {\r\n    messagesData: [\r\n        {id: 1, message: 'Hello'},\r\n        {id: 2, message: 'Че как?'},\r\n        {id: 3, message: 'йоу бро))'},\r\n        {id: 4, message: 'йоу'}\r\n    ] as Array<MessagesDataType>,\r\n    dialogsData: [\r\n        {\r\n            id: 1,\r\n            name: 'Вася',\r\n            avatar: 'https://davepagurek.com/wp-content/uploads/2010/06/TrollFace-150x150.gif'\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'Сергей',\r\n            avatar: 'https://images-wixmp-ed30a86b8c4ca887773594c2.wixmp.com/f/5f4bd7a6-f763-4518-9b81-bdfd40ce3fc9/d26yer1-421bb5b8-9fc2-4d5a-b2d1-1e1f81b26b82.png?token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ1cm46YXBwOiIsImlzcyI6InVybjphcHA6Iiwib2JqIjpbW3sicGF0aCI6IlwvZlwvNWY0YmQ3YTYtZjc2My00NTE4LTliODEtYmRmZDQwY2UzZmM5XC9kMjZ5ZXIxLTQyMWJiNWI4LTlmYzItNGQ1YS1iMmQxLTFlMWY4MWIyNmI4Mi5wbmcifV1dLCJhdWQiOlsidXJuOnNlcnZpY2U6ZmlsZS5kb3dubG9hZCJdfQ.NGftGliwoCe62wFfNDfOvJS1OHr-DpDAcGBBHsyT4MU'\r\n        },\r\n        {id: 3, name: 'Петя', avatar: 'https://estnn.com/wp-content/uploads/2018/08/CSGO-150x150.png'},\r\n        {\r\n            id: 4,\r\n            name: 'Катя',\r\n            avatar: 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRU76yRpDscFUVMSRBNy6mUvRZJg5KxftYE4w&usqp=CAU'\r\n        }\r\n    ] as Array<DialogsDataType>,\r\n    newMessageBody: \"\"\r\n};\r\n\r\nconst dialogsReducer = (state: InitialStateType = initialState, action: ActionsTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case UPDATE_NEW_MESSAGE_BODY:\r\n            return {\r\n                ...state,\r\n                newMessageBody: action.body\r\n            };\r\n\r\n\r\n        case SEND_MESSAGE:\r\n            let body = state.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messagesData: [...state.messagesData, {id: 7, message: body}],\r\n                newMessageBody: '',\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nexport const sendMessage = () => ({\r\n    type: SEND_MESSAGE\r\n})\r\nexport const updateNewMessageBody = (body: string) => ({\r\n    type: UPDATE_NEW_MESSAGE_BODY, body: body\r\n})\r\n\r\nexport default dialogsReducer;\r\n\r\n","import style from \"./../Dialogs.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {DialogsDataType} from \"../../../redux/dialogs-reducer\";\r\n\r\nconst DialogItem: React.FC<DialogsDataType> = (props) => {\r\n    return (\r\n        <div className={style.dialog + ' ' + style.active}>\r\n            <NavLink to={\"/dialogs/\" + props.id}>\r\n                <div>\r\n                    <img src={props.avatar} alt=\"user avatar\"/>\r\n                    {props.name}\r\n                </div>\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport style from \"../Dialogs.module.css\";\r\nimport {MessagesDataType} from \"../../../redux/dialogs-reducer\";\r\n\r\nconst Message: React.FC<MessagesDataType> = (props) => {\r\n    return (\r\n        <div className={style.message}>\r\n            {props.message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React, {ChangeEvent} from \"react\";\r\nimport style from './Dialogs.module.css'\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {DialogsPageType} from \"../../redux/dialogs-reducer\";\r\n\r\ntype DialogsPropsType = {\r\n    dialogsPage: DialogsPageType\r\n    updateNewMessageBody: (body: string) => void\r\n    sendMessage: () => void\r\n}\r\n\r\nconst Dialogs: React.FC<DialogsPropsType> = (props) => {\r\n    let state = props.dialogsPage\r\n    let dialogsElements = state.dialogsData.map((d) => <DialogItem name={d.name} id={d.id} key={d.id}\r\n                                                                   avatar={d.avatar}/>);\r\n    let messagesElements = state.messagesData.map((m) => <Message id={m.id} message={m.message} key={m.id}/>)\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n    let onSendMessageClick = () => {\r\n        props.sendMessage();\r\n    }\r\n    let onNewMessageChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        let body = e.target.value\r\n        props.updateNewMessageBody(body)\r\n    }\r\n\r\n    return (\r\n        <div className={style.dialogs}>\r\n            <div className={style.dialogItems}>\r\n                {dialogsElements}\r\n            </div>\r\n\r\n            <div className={style.messages}>\r\n                <div className={style.message}>\r\n                    {messagesElements}\r\n                </div>\r\n                <div>\r\n                    <div>\r\n                        <textarea value={newMessageBody}\r\n                                  onChange={onNewMessageChange}\r\n                                  placeholder={\"Enter your message\"}></textarea>\r\n                    </div>\r\n                    <div>\r\n                        <button onClick={onSendMessageClick}>Send</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport {sendMessage, updateNewMessageBody} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\n\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\nlet DialogsContainer = connect(mapStateToProps, {updateNewMessageBody,sendMessage})(Dialogs);\r\n\r\nexport default DialogsContainer;","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    withCredentials: true,\r\n    headers: {\r\n        \"API-KEY\": \"2ed61e06-26ec-45be-9d39-940904ed6093\"\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage: number, pageSize: number) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => response.data)\r\n    },\r\n    follow(userId: number) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId: number) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    getProfile(userId: string) {\r\n        return instance.get(`profile/` + userId)\r\n    },\r\n\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`)\r\n    }\r\n}","import {\r\n    ActionsTypes,\r\n    FollowActionType,\r\n    SetCurrentPageActionType, SetFollowingInProgressActionType, SetIsFetchingActionType,\r\n    SetUsersActionType,\r\n    UnfollowActionType\r\n} from \"./redux-store\";\r\nimport {usersAPI} from \"../api/api\";\r\nimport {Dispatch} from \"react\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = \"SET_USERS\";\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\r\nconst SET_TOTAL_USERS_COUNT = \"SET_TOTAL_USERS_COUNT\";\r\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = \"TOGGLE_IS_FOLLOWING_PROGRESS\";\r\n\r\nlet initialState = {\r\n    users: [] as Array<UserType>,\r\n    pageSize: 5,\r\n    totalUsers: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [0]\r\n};\r\n\r\nconst usersReducer = (state: InitialStateType = initialState, action: ActionsTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(user => {\r\n                    if (user.id === action.userID) {\r\n                        return {...user, followed: true}\r\n                    }\r\n                    return user\r\n                })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(user => {\r\n                    if (user.id === action.userID) {\r\n                        return {...user, followed: false}\r\n                    }\r\n                    return user\r\n                })\r\n            }\r\n        case SET_USERS: {\r\n            return {\r\n                ...state,\r\n                users: [...action.users]\r\n            }\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsers: action.totalUsers}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userID]\r\n                    : state.followingInProgress.filter(id => id !== action.userID)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\ntype InitialStateType = typeof initialState;\r\nexport type UsersPageType = {\r\n    users: Array<UserType>\r\n    pageSize: number,\r\n    totalUsers: number,\r\n    currentPage: number\r\n    isFetching: boolean,\r\n    followingInProgress: Array<number>\r\n}\r\nexport type UserType = {\r\n    id: number\r\n    photoUrl: string\r\n    name: string\r\n    status: string\r\n    followed: boolean\r\n    photos: {\r\n        small: string\r\n        large: string\r\n    }\r\n    location:\r\n        {\r\n            city: string,\r\n            country: string\r\n        }\r\n}\r\n\r\n//Action Creators\r\nexport const followSuccess = (userID: number): FollowActionType => ({type: FOLLOW, userID})\r\nexport const unfollowSuccess = (userID: number): UnfollowActionType => ({type: UNFOLLOW, userID})\r\nexport const setUsers = (users: Array<UserType>): SetUsersActionType => ({type: SET_USERS, users})\r\nexport const setCurrentPage = (currentPage: number): SetCurrentPageActionType => ({\r\n    type: SET_CURRENT_PAGE, currentPage\r\n})\r\nexport const setTotalUsersCount = (totalUsers: number) => ({\r\n    type: SET_TOTAL_USERS_COUNT, totalUsers\r\n})\r\nexport const setIsFetching = (isFetching: boolean): SetIsFetchingActionType => ({\r\n    type: TOGGLE_IS_FETCHING, isFetching\r\n})\r\nexport const setFollowingInProgress = (isFetching: boolean, userID: number): SetFollowingInProgressActionType => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userID\r\n})\r\n\r\n//Thunk Creators\r\nexport const getUsers = (currentPage: number, pageSize: number) => (dispatch: Dispatch<any>) => {\r\n    dispatch(setIsFetching(true));\r\n    usersAPI.getUsers(currentPage, pageSize)\r\n        .then(data => {\r\n            dispatch(setIsFetching(false));\r\n            dispatch(setUsers(data.items));\r\n            dispatch(setTotalUsersCount(data.totalCount));\r\n        });\r\n}\r\nexport const follow = (userId: number) => (dispatch: Dispatch<any>) => {\r\n    dispatch(setFollowingInProgress(true, userId));\r\n    usersAPI.follow(userId)\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(followSuccess(userId));\r\n            }\r\n            dispatch(setFollowingInProgress(false, userId));\r\n        });\r\n}\r\nexport const unfollow = (userId: number) => (dispatch: Dispatch<any>) => {\r\n    dispatch(setFollowingInProgress(true, userId));\r\n    usersAPI.unfollow(userId)\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(unfollowSuccess(userId));\r\n            }\r\n            dispatch(setFollowingInProgress(false, userId));\r\n        });\r\n}\r\n\r\nexport default usersReducer;\r\n","export default __webpack_public_path__ + \"static/media/user.a6143582.png\";","import React from \"react\";\r\nimport styles from \"./Users.module.css\";\r\nimport userPhoto from \"../../assets/images/user.png\";\r\nimport { UserType } from \"../../redux/users-reducer\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\ntype PropsType = {\r\n  totalUsers: number;\r\n  pageSize: number;\r\n  currentPage: number;\r\n  onPageChanging: (p: number) => void;\r\n  users: Array<UserType>;\r\n  followingInProgress: Array<number>;\r\n  unfollow: Function;\r\n  follow: Function;\r\n};\r\n\r\nlet Users = (props: PropsType) => {\r\n  let pagesCount = Math.ceil(props.totalUsers / props.pageSize);\r\n  let pages = [];\r\n  for (let i = 1; i <= pagesCount; i++) {\r\n    pages.push(i);\r\n  }\r\n\r\n  return (\r\n    <div className={styles.users}>\r\n      <div className={styles.pageNavigation}>\r\n        {pages.slice(0, 15).map((page) => {\r\n          return (\r\n            <span\r\n              className={\r\n                props.currentPage === page\r\n                  ? styles.selectedPage\r\n                  : styles.pageNumber\r\n              }\r\n              onClick={(e) => props.onPageChanging(page)}\r\n            >\r\n              {page}\r\n            </span>\r\n          );\r\n        })}\r\n      </div>\r\n      {props.users.map((user) => (\r\n        <div key={Math.random()} className={styles.userInfo}>\r\n          <div>\r\n            <div className={styles.avaAndButtonBlock}>\r\n              <NavLink to={\"/profile/\" + user.id}>\r\n                <img\r\n                  className={styles.userAvatar}\r\n                  src={\r\n                    user.photos.small != null ? user.photos.small : userPhoto\r\n                  }\r\n                  alt=\"profile avatar\"\r\n                />\r\n              </NavLink>\r\n              {user.followed ? (\r\n                //------------UNFOLLOW-------------\r\n                <button\r\n                  disabled={props.followingInProgress.some(\r\n                    (id) => id === user.id,\r\n                  )}\r\n                  onClick={() => {\r\n                    props.unfollow(user.id);\r\n                  }}\r\n                >\r\n                  Unfollow\r\n                </button>\r\n              ) : (\r\n                //------------FOLLOW-------------\r\n                <button\r\n                  disabled={props.followingInProgress.some(\r\n                    (id) => id === user.id,\r\n                  )}\r\n                  onClick={() => {\r\n                    props.follow(user.id);\r\n                  }}\r\n                >\r\n                  Follow\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <div className={styles.userContent}>\r\n            <div className={styles.userNameAndStatus}>\r\n              <div className={styles.userName}>{user.name}</div>\r\n              <div className={styles.userStatus}>{user.status}</div>\r\n            </div>\r\n\r\n            <div>\r\n              <div>{\"user.location.country\"}</div>\r\n              <div>{\"user.location.city\"}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","export default __webpack_public_path__ + \"static/media/giphy.eb6e8672.gif\";","import React from \"react\";\r\nimport styles from \"./Preloader.module.css\";\r\nimport preloader from \"../../../assets/images/giphy.gif\";\r\n\r\n\r\nlet Preloader = () => {\r\n    return (\r\n        <div>\r\n            <img className={styles.preloader} src={preloader} alt=\"preloader\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader;","import {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {\r\n    follow,\r\n    getUsers,\r\n    setCurrentPage,\r\n    setFollowingInProgress,\r\n    unfollow,\r\n    UsersPageType\r\n} from \"../../redux/users-reducer\";\r\nimport React from \"react\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\n\r\nexport type MapDispatchPropsType = {\r\n    // описываем, что возвращает MapDispatchToProps\r\n    follow: Function\r\n    unfollow: Function\r\n    setCurrentPage: (pageNumber: number) => void\r\n    setFollowingInProgress: (isFetching: boolean, userId: number) => void\r\n    getUsers: Function\r\n}\r\n\r\nexport type UsersPropsType = MapDispatchPropsType & UsersPageType\r\n\r\nclass UsersContainer extends React.Component<UsersPropsType> {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    onPageChanging = (pageNumber: number) => {\r\n        this.props.setCurrentPage(pageNumber);\r\n        this.props.getUsers(pageNumber, this.props.pageSize);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.isFetching\r\n                    ? <Preloader/>\r\n                    : null\r\n                }\r\n                <Users\r\n                    totalUsers={this.props.totalUsers}\r\n                    pageSize={this.props.pageSize}\r\n                    currentPage={this.props.currentPage}\r\n                    onPageChanging={this.onPageChanging}\r\n                    users={this.props.users}\r\n                    follow={this.props.follow}\r\n                    unfollow={this.props.unfollow}\r\n                    followingInProgress={this.props.followingInProgress}\r\n                />\r\n            </>)\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType): UsersPageType => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsers: state.usersPage.totalUsers,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingInProgress: state.usersPage.followingInProgress\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    follow,\r\n    unfollow,\r\n    setCurrentPage,\r\n    setFollowingInProgress,\r\n    getUsers\r\n})(UsersContainer);","import {ActionsTypes, SetUserProfileActionType, UserProfileType} from \"./redux-store\";\r\nimport {usersAPI} from \"../api/api\";\r\nimport {Dispatch} from \"react\";\r\n\r\nconst ADD_POST = 'ADD_POST';\r\nconst UPDATE_NEW_POST_TEXT = 'UPDATE_NEW_POST_TEXT';\r\nconst SET_USER_PROFILE = \"SET_USER_PROFILE\";\r\n\r\nlet initialState: ProfilePageType = {\r\n    posts: [\r\n        {id: 1, message: 'Hello!', likeCount: 5},\r\n        {id: 2, message: \"It's my first post\", likeCount: 15},\r\n        {id: 3, message: \"It's my first post\", likeCount: 15},\r\n        {id: 4, message: \"It's my first post\", likeCount: 17},\r\n        {id: 5, message: \"It's my first post\", likeCount: 0},\r\n    ] as Array<PostType>,\r\n    newPostText: \"\",\r\n    profile: null\r\n};\r\n\r\nconst profileReducer = (state: ProfilePageType = initialState, action: ActionsTypes): ProfilePageType => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 6,\r\n                message: state.newPostText,\r\n                likeCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: \"\"\r\n            }\r\n        }\r\n        case UPDATE_NEW_POST_TEXT: {\r\n            return {\r\n                ...state,\r\n                newPostText: action.newText\r\n            }\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n// export type ProfilePageType =  typeof initialState\r\nexport type ProfilePageType = {\r\n    posts: Array<PostType>\r\n    newPostText: string\r\n    profile: null | UserProfileType\r\n}\r\n\r\nexport type PostType = {\r\n    id: number\r\n    message: string\r\n    likeCount: number\r\n}\r\n\r\nexport const addPost = () => ({type: ADD_POST})\r\nexport const updateNewPostText = (text: string) => ({\r\n    type: UPDATE_NEW_POST_TEXT,\r\n    newText: text\r\n})\r\nconst setUserProfile = (profile: UserProfileType): SetUserProfileActionType => ({\r\n    type: SET_USER_PROFILE, profile\r\n})\r\n\r\nexport const getUserProfile = (userId: string) => (dispatch: Dispatch<any>) => {\r\n    usersAPI.getProfile(userId).then(response => {\r\n        dispatch(setUserProfile(response.data))\r\n    })\r\n}\r\n\r\nexport default profileReducer;\r\n\r\n","import React from \"react\";\r\nimport style from \"./ProfileInfo.module.css\";\r\nimport { UserProfileType } from \"../../../redux/redux-store\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\ntype PropsType = {\r\n  profile: UserProfileType;\r\n};\r\n\r\nconst ProfileInfo = (props: PropsType) => {\r\n  return (\r\n    <div>\r\n      <div>\r\n        <img\r\n          src=\"https://images.ctfassets.net/hrltx12pl8hq/7yQR5uJhwEkRfjwMFJ7bUK/dc52a0913e8ff8b5c276177890eb0129/offset_comp_772626-opt.jpg?fit=fill&w=800&h=300\"\r\n          alt=\"Man with a camera\"\r\n          className={style.backgroundImage}\r\n        />\r\n      </div>\r\n      <div className={style.avaAndDescriptionBlock}>\r\n        <div>\r\n          <img\r\n            className={style.avatar}\r\n            src={props.profile.photos.large}\r\n            alt={\"User avatar\"}\r\n          />\r\n        </div>\r\n        <div className={style.description}>\r\n          <span>\r\n            <b> {props.profile.fullName}</b>\r\n          </span>\r\n          <span>ID: {props.profile.userId}</span>\r\n          <span>\r\n            Looking For A Job: {props.profile.lookingForAJobDescription}\r\n          </span>\r\n        </div>\r\n        <div>\r\n          <ul>\r\n            My contacts:\r\n            <li>\r\n              GitHub:{\" \"}\r\n              <Link\r\n                to={\"htps://\" + props.profile.contacts.github}\r\n                target=\"_blank\"\r\n              >\r\n                {props.profile.contacts.github}\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              VK:{\" \"}\r\n              <Link to={\"htps://\" + props.profile.contacts.vk} target=\"_blank\">\r\n                {props.profile.contacts.vk}\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <div className={style.aboutMeBlock}>\r\n        <div>\r\n          {\" \"}\r\n          <b>About Me:</b> {props.profile.aboutMe}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\nimport s from \"./Post.module.css\";\r\nimport {PostType} from \"../../../../redux/profile-reducer\";\r\n\r\n\r\nconst Post: React.FC<PostType> = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img src=\"https://sun9-62.userapi.com/impg/pRq93id7A8CTtID_fNLO9QGE-rU-hzNfAx4_Kg/4qE8UsTUo98.jpg?size=400x0&quality=96&crop=1,1,959,959&sign=be4486f2eca062adaf9fcb8c45418e0d&ava=1\"/>\r\n            {props.message}\r\n            <div>\r\n                <span>Like </span> {props.likeCount}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import React, {RefObject} from \"react\";\r\nimport style from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport {PostType} from \"../../../redux/profile-reducer\";\r\n\r\ntype PropsMyPostsType = {\r\n    posts: Array<PostType>\r\n    newPostText: string\r\n    addPost: () => void\r\n    updateNewPostText: (newText: string) => void\r\n}\r\n\r\nconst MyPosts = (props: PropsMyPostsType) => {\r\n    let postsElements =\r\n        props.posts.map((p) => <Post id={p.id} message={p.message} likeCount={p.likeCount} key={p.id}/>);\r\n\r\n    let newPostElement: RefObject<HTMLTextAreaElement> = React.createRef();\r\n\r\n    let onAddPost = () => {\r\n        props.addPost()\r\n    }\r\n\r\n    let onPostChange = () => {\r\n        if (newPostElement.current) {\r\n            let text = newPostElement.current.value\r\n            props.updateNewPostText(text)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={style.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <div>\r\n                <div>\r\n                    <textarea\r\n                        onChange={onPostChange}\r\n                        ref={newPostElement}\r\n                        value={props.newPostText}/>\r\n                </div>\r\n                <div>\r\n                    <button onClick={onAddPost}>Add post</button>\r\n                    <button>Delete</button>\r\n                </div>\r\n            </div>\r\n            <div className={style.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MyPosts;","import {addPost, updateNewPostText} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../../redux/redux-store\";\r\n\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nlet MyPostsContainer = connect(mapStateToProps, {\r\n    updateNewPostText,\r\n    addPost\r\n})(MyPosts);\r\n\r\nexport default MyPostsContainer;","import ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport { UserProfileType } from \"../../redux/redux-store\";\r\n\r\ntype PropsType = {\r\n  profile: UserProfileType;\r\n};\r\n\r\nconst Profile = (props: PropsType) => {\r\n  return (\r\n    <div>\r\n      <ProfileInfo profile={props.profile} />\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React, { useEffect } from \"react\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { getUserProfile } from \"../../redux/profile-reducer\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport Profile from \"./Profile\";\r\nimport { RootState } from \"../../redux/redux-store\";\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  profile: state.profilePage.profile,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getUserProfile,\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nconst ProfileContainer: React.FC<PropsFromRedux> = ({\r\n  profile,\r\n  getUserProfile,\r\n}) => {\r\n  const { userId } = useParams<{ userId: string }>();\r\n\r\n  useEffect(() => {\r\n    if (!userId) {\r\n      getUserProfile(\"2\");\r\n    } else {\r\n      getUserProfile(userId);\r\n    }\r\n  }, [userId, getUserProfile]);\r\n\r\n  return profile ? <Profile profile={profile} /> : <Preloader />;\r\n};\r\n\r\nexport default connector(ProfileContainer);\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport style from \"./Header.module.css\";\r\n\r\ntype PropsType = {\r\n  isAuth: boolean;\r\n  login: string | null;\r\n};\r\n\r\nconst Header: React.FC<PropsType> = (props: PropsType) => {\r\n  return (\r\n    <div className={style.sidebar}>\r\n      <div className={style.sidebarLinks}>\r\n        <NavLink to=\"/profile\" className={style.navItem}>\r\n          Profile\r\n        </NavLink>\r\n\r\n        <NavLink to=\"/news\" className={style.navItem}>\r\n          News\r\n        </NavLink>\r\n\r\n        <NavLink to=\"/dialogs\" className={style.navItem}>\r\n          Dialogs\r\n        </NavLink>\r\n\r\n        <NavLink to=\"/friends\" className={style.navItem}>\r\n          Friends\r\n        </NavLink>\r\n\r\n        <NavLink to=\"/music\" className={style.navItem}>\r\n          Music\r\n        </NavLink>\r\n\r\n        <NavLink to=\"/users\" className={style.navItem}>\r\n          Find Users\r\n        </NavLink>\r\n\r\n        <NavLink to=\"/settings\" className={style.navItem}>\r\n          Settings\r\n        </NavLink>\r\n      </div>\r\n      {props.isAuth ? (\r\n        <NavLink to=\"/profile\" className={`${style.navItem} ${style.login}`}>\r\n          {props.login}\r\n        </NavLink>\r\n      ) : (\r\n        <NavLink to=\"/login\" className={`${style.navItem} ${style.login}`}>\r\n          Login\r\n        </NavLink>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import {ActionsTypes, SetAuthUserDataActionType} from \"./redux-store\";\r\nimport {authAPI} from \"../api/api\";\r\nimport {Dispatch} from \"react\";\r\n\r\nconst SET_USER_DATA = \"SET_USER_DATA\";\r\n\r\nexport type InitialStateType = {\r\n    id: null | number,\r\n    email: null | string,\r\n    login: null | string,\r\n    isAuth: boolean\r\n}\r\n\r\nlet initialState: InitialStateType = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n}\r\n\r\nconst authReducer = (state: InitialStateType = initialState, action: ActionsTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA: {\r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n                isAuth: true\r\n            }\r\n        }\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\nconst setAuthUserData = (data: InitialStateType): SetAuthUserDataActionType => ({\r\n    type: SET_USER_DATA, data\r\n})\r\n\r\nexport const getAuthUserData = () => (dispatch: Dispatch<any>) => {\r\n    authAPI.me()\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(setAuthUserData(response.data.data))\r\n            }\r\n        });\r\n}\r\n\r\nexport default authReducer;","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport { connect } from \"react-redux\";\r\nimport { getAuthUserData } from \"../../redux/auth-reducer\";\r\nimport { AppStateType } from \"../../redux/redux-store\";\r\n\r\ntype AuthPropsType = MapDispatchPropsType & MapStatePropsType;\r\n\r\nclass HeaderContainer extends React.Component<AuthPropsType> {\r\n  componentDidMount() {\r\n    this.props.getAuthUserData();\r\n  }\r\n  render() {\r\n    return <Header {...this.props} />;\r\n  }\r\n}\r\n\r\nexport type MapStatePropsType = {\r\n  isAuth: boolean;\r\n  login: string | null;\r\n};\r\nexport type MapDispatchPropsType = {\r\n  getAuthUserData: Function;\r\n};\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => ({\r\n  isAuth: state.auth.isAuth,\r\n  login: state.auth.login,\r\n});\r\n\r\nexport default connect<\r\n  MapStatePropsType,\r\n  MapDispatchPropsType,\r\n  {},\r\n  AppStateType\r\n>(mapStateToProps, { getAuthUserData })(HeaderContainer);\r\n","import FriendsBlock from \"./components/FriendsBlock/FriendsBlock\";\r\nimport News from \"./components/News/News\";\r\nimport Music from \"./components/Music/Music\";\r\nimport Settings from \"./components/Settings/Settings\";\r\nimport Friends from \"./components/Friends/Friends\";\r\nimport { Route, Routes } from \"react-router-dom\";\r\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport \"./App.css\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"app-wrapper\">\r\n      <HeaderContainer />\r\n      <FriendsBlock />\r\n      <div className=\"app-wrapper-content\">\r\n        <Routes>\r\n          <Route path=\"/profile/:userId?\" element={<ProfileContainer />} />\r\n          <Route path=\"/dialogs\" element={<DialogsContainer />} />\r\n          <Route path=\"/News\" element={News} />\r\n          <Route path=\"/Music\" element={Music} />\r\n          <Route path=\"/Settings\" element={Settings} />\r\n          <Route path=\"/Friends\" element={Friends} />\r\n          <Route path=\"/Users\" element={<UsersContainer />} />\r\n        </Routes>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import {ActionsTypes} from \"./redux-store\";\r\n\r\nexport type HeaderType = {\r\n    sidebarFriends: Array<SidebarFriendsType>\r\n}\r\nexport type SidebarFriendsType = {\r\n    id: number\r\n    avatar: string\r\n    name: string\r\n}\r\n\r\nlet initialState = {\r\n    sidebarFriends: [\r\n        {\r\n            id: 1,\r\n            name: 'Вася',\r\n            avatar: 'https://davepagurek.com/wp-content/uploads/2010/06/TrollFace-150x150.gif'\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'Сергей',\r\n            avatar: 'https://images-wixmp-ed30a86b8c4ca887773594c2.wixmp.com/f/5f4bd7a6-f763-4518-9b81-bdfd40ce3fc9/d26yer1-421bb5b8-9fc2-4d5a-b2d1-1e1f81b26b82.png?token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ1cm46YXBwOiIsImlzcyI6InVybjphcHA6Iiwib2JqIjpbW3sicGF0aCI6IlwvZlwvNWY0YmQ3YTYtZjc2My00NTE4LTliODEtYmRmZDQwY2UzZmM5XC9kMjZ5ZXIxLTQyMWJiNWI4LTlmYzItNGQ1YS1iMmQxLTFlMWY4MWIyNmI4Mi5wbmcifV1dLCJhdWQiOlsidXJuOnNlcnZpY2U6ZmlsZS5kb3dubG9hZCJdfQ.NGftGliwoCe62wFfNDfOvJS1OHr-DpDAcGBBHsyT4MU'\r\n        },\r\n        {\r\n            id: 3, \r\n            name: 'Петя',\r\n            avatar: 'https://estnn.com/wp-content/uploads/2018/08/CSGO-150x150.png'\r\n        },\r\n    ]\r\n};\r\n\r\nconst headerReducer = (state: HeaderType = initialState, action: ActionsTypes) => {\r\n    switch (action.type) {\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default headerReducer;","import {ActionsTypes} from \"./redux-store\";\r\n\r\nlet initialState = {\r\n    friendsData: [\r\n        {\r\n            id: 1,\r\n            name: 'Вася',\r\n            avatar: 'https://davepagurek.com/wp-content/uploads/2010/06/TrollFace-150x150.gif'\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'Сергей',\r\n            avatar: 'https://images-wixmp-ed30a86b8c4ca887773594c2.wixmp.com/f/5f4bd7a6-f763-4518-9b81-bdfd40ce3fc9/d26yer1-421bb5b8-9fc2-4d5a-b2d1-1e1f81b26b82.png?token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ1cm46YXBwOiIsImlzcyI6InVybjphcHA6Iiwib2JqIjpbW3sicGF0aCI6IlwvZlwvNWY0YmQ3YTYtZjc2My00NTE4LTliODEtYmRmZDQwY2UzZmM5XC9kMjZ5ZXIxLTQyMWJiNWI4LTlmYzItNGQ1YS1iMmQxLTFlMWY4MWIyNmI4Mi5wbmcifV1dLCJhdWQiOlsidXJuOnNlcnZpY2U6ZmlsZS5kb3dubG9hZCJdfQ.NGftGliwoCe62wFfNDfOvJS1OHr-DpDAcGBBHsyT4MU'\r\n        },\r\n        {id: 3, name: 'Петя', avatar: 'https://estnn.com/wp-content/uploads/2018/08/CSGO-150x150.png'},\r\n        {\r\n            id: 4,\r\n            name: 'Катя',\r\n            avatar: 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRU76yRpDscFUVMSRBNy6mUvRZJg5KxftYE4w&usqp=CAU'\r\n        }\r\n    ] as Array<FriendsDataType>\r\n};\r\n\r\nconst friendsReducer = (state: InitialStateType = initialState, action: ActionsTypes):InitialStateType => {\r\n    switch (action.type) {\r\n        default:\r\n            return state;\r\n    }\r\n}\r\ntype InitialStateType = typeof initialState\r\nexport type FriendsPageType = {\r\n    friendsData: Array<FriendsDataType>\r\n}\r\nexport type FriendsDataType = {\r\n    id: number\r\n    name: string\r\n    avatar: string\r\n}\r\n\r\nexport default friendsReducer;","import {combineReducers, createStore,applyMiddleware} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport headerReducer from \"./header-reducer\";\r\nimport friendsReducer from \"./friends-reducer\";\r\nimport usersReducer, {UserType} from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware  from \"redux-thunk\"\r\n\r\nlet rootReducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    friendsPage: friendsReducer,\r\n    usersPage: usersReducer,\r\n    header: headerReducer,\r\n    auth: authReducer\r\n});\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n\r\nexport type ActionsTypes =\r\n    | AddPostActionType\r\n    | UpdateNewPostTextActionType\r\n    | UpdateNewMessageBodyActionType\r\n    | SendMessageActionType\r\n    | FollowActionType\r\n    | UnfollowActionType\r\n    | SetUsersActionType\r\n    | SetCurrentPageActionType\r\n    | SetTotalUsersCountActionType\r\n    | SetIsFetchingActionType\r\n    | SetUserProfileActionType\r\n    | SetAuthUserDataActionType\r\n    | SetFollowingInProgressActionType\r\n\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer> //тип стейта приложения\r\nexport type AddPostActionType = {\r\n    type: \"ADD_POST\"\r\n}\r\nexport type UpdateNewPostTextActionType = {\r\n    type: \"UPDATE_NEW_POST_TEXT\"\r\n    newText: string\r\n}\r\nexport type UpdateNewMessageBodyActionType = {\r\n    type: \"UPDATE_NEW_MESSAGE_BODY\"\r\n    body: string\r\n}\r\nexport type SendMessageActionType = {\r\n    type: \"SEND_MESSAGE\"\r\n}\r\nexport type FollowActionType = {\r\n    type: \"FOLLOW\",\r\n    userID: number\r\n}\r\nexport type UnfollowActionType = {\r\n    type: \"UNFOLLOW\",\r\n    userID: number\r\n}\r\nexport type SetUsersActionType = {\r\n    type: \"SET_USERS\",\r\n    users: Array<UserType>\r\n}\r\nexport type SetCurrentPageActionType = {\r\n    type: \"SET_CURRENT_PAGE\",\r\n    currentPage: number\r\n}\r\nexport type SetTotalUsersCountActionType = {\r\n    type: \"SET_TOTAL_USERS_COUNT\",\r\n    totalUsers: number\r\n}\r\nexport type SetIsFetchingActionType = {\r\n    type: \"TOGGLE_IS_FETCHING\",\r\n    isFetching: boolean\r\n}\r\nexport type SetUserProfileActionType = {\r\n    type: \"SET_USER_PROFILE\",\r\n    profile: UserProfileType\r\n}\r\nexport type SetAuthUserDataActionType = {\r\n    type: \"SET_USER_DATA\",\r\n    data: SetUserDataType\r\n}\r\nexport type SetFollowingInProgressActionType = {\r\n    type: \"TOGGLE_IS_FOLLOWING_PROGRESS\",\r\n    isFetching: boolean,\r\n    userID:number\r\n}\r\nexport type SetUserDataType = {\r\n    email: null | string,\r\n    id: null | number,\r\n    login: null | string,\r\n    isAuth: boolean\r\n}\r\nexport type UserProfileType = {\r\n    aboutMe: string,\r\n    contacts: {\r\n        facebook: string,\r\n        website: null,\r\n        vk: string,\r\n        twitter: string,\r\n        instagram: string,\r\n        youtube: string,\r\n        github: string,\r\n        mainLink: null\r\n    },\r\n    lookingForAJob: boolean,\r\n    lookingForAJobDescription: string,\r\n    fullName: string,\r\n    userId: number,\r\n    photos: {\r\n        small: string,\r\n        large: string\r\n    }\r\n}\r\n\r\nlet store = createStore(rootReducer, applyMiddleware(thunkMiddleware))\r\n\r\n// @ts-ignore  //save store global\r\nwindow.store = store\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport store from \"./redux/redux-store\";\r\nimport {Provider} from \"react-redux\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <BrowserRouter>\r\n            <Provider store={store}>\r\n                <App/>\r\n            </Provider>\r\n        </BrowserRouter>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}